<Controls:MetroWindow x:Class="HurtradeBackofficeClient.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:intr="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Dialog:DialogParticipation.Register="{Binding}"              
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        mc:Ignorable="d"
        Title="Hur Trade" Height="608" Width="1390.755"
        BorderThickness="0" 
        GlowBrush="Black"
        ResizeMode="CanResizeWithGrip"

        WindowTransitionsEnabled="False"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
    >
    <intr:Interaction.Triggers>
        <intr:EventTrigger EventName="Loaded">
            <intr:InvokeCommandAction Command="{Binding WindowLoaded}"/>
        </intr:EventTrigger>
        <intr:EventTrigger EventName="Closing">
            <intr:InvokeCommandAction Command="{Binding WindowClosing}"/>
        </intr:EventTrigger>
        <intr:EventTrigger EventName="Closed">
            <intr:InvokeCommandAction Command="{Binding WindowClosed}"/>
        </intr:EventTrigger>
    </intr:Interaction.Triggers>


    <DockPanel
        LastChildFill="True"
    >
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button Command="{Binding ShowLogsCommand}" Content="Notifications Log"/>
            </ToolBar>
        </ToolBarTray>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="420px"
                    />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <StackPanel
                Grid.Column="0"
                Grid.Row="0"
                >
                <ListView 
                    HorizontalAlignment = "Left" 
                    Height = "auto" 
                    Margin = "10,10,0,0" 
                    VerticalAlignment = "Top" 
                
                    Name="QuoteList"
                    SelectionMode="Single"
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding QuoteCollectionView}"
                >
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header = "Symbol" DisplayMemberBinding = "{Binding Name}" 
                      Width = "100"/>

                            <GridViewColumn Header = "Bid" DisplayMemberBinding = "{Binding Bid}" 
                      Width = "70"/>

                            <GridViewColumn Header = "Ask" DisplayMemberBinding = "{Binding Ask}" 
                      Width = "70"/>

                            <GridViewColumn Header = "Date/Time" DisplayMemberBinding = "{Binding QuoteTime}" 
                      Width = "150"/>

                        </GridView>
                    </ListView.View>

                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Candlestick Chart" Command="{Binding CandlestickChartCommand}"/>
                        </ContextMenu>
                    </ListView.ContextMenu>

                </ListView>
            </StackPanel>

            <DockPanel
                Grid.Column="1"
                Grid.Row="0"
                >
                <DockPanel
                    DockPanel.Dock="Top"
                    LastChildFill="True"
                    >
                    <Grid
                        Margin="0,10,0,0"
                        Width="100"
                        Height="150"
                        DockPanel.Dock="Left"
                        >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                    
                        <Button
                            Grid.Row="0"
                            Grid.ColumnSpan="3"
                            Content="Approve"
                            Command="{Binding BulkApproveSelectedTradeCommand}"
                            />

                        <Button
                            Grid.Row="1"
                            Grid.ColumnSpan="3"
                            Content="Decline"
                            Command="{Binding BulkRejectSelectedTradeCommand}"
                            />

                        <Button
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="+1"
                            Command="{Binding RequoteSetPriceCommand}"
                            CommandParameter="+1"
                            />

                        <Button
                            Grid.Row="2"
                            Grid.Column="1"
                            Content="+5"
                            Command="{Binding RequoteSetPriceCommand}"
                            CommandParameter="+5"
                            />

                        <Button
                            Grid.Row="2"
                            Grid.Column="2"
                            Content="+10"
                            Command="{Binding RequoteSetPriceCommand}"
                            CommandParameter="+10"
                            />

                        <Button
                            Grid.Row="3"
                            Grid.ColumnSpan="3"
                            Content="Requote"
                            Command="{Binding RequoteSelectedOrders}"
                            />
                    

                        <Button
                            Grid.Row="4"
                            Grid.Column="0"
                            Content="-1"
                            Command="{Binding RequoteSetPriceCommand}"
                            CommandParameter="-1"
                            />

                        <Button
                            Grid.Row="4"
                            Grid.Column="1"
                            Content="-5"
                            Command="{Binding RequoteSetPriceCommand}"
                            CommandParameter="-5"
                            />

                        <Button
                            Grid.Row="4"
                            Grid.Column="2"
                            Content="-10"
                            Command="{Binding RequoteSetPriceCommand}"
                            CommandParameter="-10"
                            />
                    </Grid>
                
                    <ListView 
                        DockPanel.Dock="Right"
                        Height = "auto" 
                        Margin = "10,10,0,0" 
                        VerticalAlignment = "Top" 
                        SelectionMode="Single"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding PendingTradesCollectionView}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.CanContentScroll="False"
                    >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="BorderBrush" Value="LightGray" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.View>
                            <GridView>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"/>-->
                                            <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header = "Id" DisplayMemberBinding = "{Binding Friendlyorderid}" Width = "60"/>
                                <GridViewColumn Header = "Symbol" DisplayMemberBinding = "{Binding Commodity}" Width = "100"/>
                                <GridViewColumn Header = "B/S" DisplayMemberBinding = "{Binding OrderType}" Width = "auto"/>
                                <GridViewColumn Header = "Amt" DisplayMemberBinding = "{Binding Amount}" Width = "50"/>
                                <GridViewColumn Header = "P/L" DisplayMemberBinding = "{Binding CurrentPl}" Width = "50"/>
                                <GridViewColumn Header = "Current" DisplayMemberBinding = "{Binding CurrentPrice}" Width = "auto"/>
                                <GridViewColumn Header = "Open" DisplayMemberBinding = "{Binding OpenPrice}" Width = "auto"/>
                                <GridViewColumn Header = "Close" DisplayMemberBinding = "{Binding ClosePrice}" Width = "auto"/>
                                <GridViewColumn Header = "Requote" DisplayMemberBinding = "{Binding RequotePrice}" Width = "auto"/>
                                <GridViewColumn Header = "State" DisplayMemberBinding = "{Binding OrderState}" Width = "auto"/>
                                <GridViewColumn Header = "Client" DisplayMemberBinding = "{Binding ClientName}" Width = "auto"/>
                                <GridViewColumn Header = "Opened At" DisplayMemberBinding = "{Binding Createdat}" Width = "auto"/>
                            </GridView>
                        </ListView.View>

                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Approve" Command="{Binding ApproveSelectedTradeCommand}"/>
                                <MenuItem Header="Reject" Command="{Binding RejectSelectedTradeCommand}"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                </DockPanel>

                <DockPanel
                    Margin="0,10,0,0"
                    DockPanel.Dock="Bottom"
                    LastChildFill="True"
                    >
                    <Grid
                        DockPanel.Dock="Left"
                        Width="100"
                        Height="100"
                        >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Button
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Content="Approve"/>

                        <Button
                            Grid.Row="3"
                            Grid.RowSpan="2"
                            Content="Decline"/>

                    </Grid>

                    <ListView 
                        DockPanel.Dock="Right"
                        Height = "auto" 
                        Margin = "10,10,0,0" 
                        VerticalAlignment = "Top" 
                        SelectionMode="Single"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding PendingTradesCollectionView}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.CanContentScroll="False"
                    >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="BorderBrush" Value="LightGray" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.View>
                            <GridView>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header = "Id" DisplayMemberBinding = "{Binding Friendlyorderid}" Width = "60"/>
                                <GridViewColumn Header = "Symbol" DisplayMemberBinding = "{Binding Commodity}" Width = "100"/>
                                <GridViewColumn Header = "B/S" DisplayMemberBinding = "{Binding OrderType}" Width = "auto"/>
                                <GridViewColumn Header = "Amt" DisplayMemberBinding = "{Binding Amount}" Width = "50"/>
                                <GridViewColumn Header = "P/L" DisplayMemberBinding = "{Binding CurrentPl}" Width = "50"/>
                                <GridViewColumn Header = "Current" DisplayMemberBinding = "{Binding CurrentPrice}" Width = "auto"/>
                                <GridViewColumn Header = "Open" DisplayMemberBinding = "{Binding OpenPrice}" Width = "auto"/>
                                <GridViewColumn Header = "Close" DisplayMemberBinding = "{Binding ClosePrice}" Width = "auto"/>
                                <GridViewColumn Header = "State" DisplayMemberBinding = "{Binding OrderState}" Width = "auto"/>
                                <GridViewColumn Header = "Client" DisplayMemberBinding = "{Binding ClientName}" Width = "auto"/>
                                <GridViewColumn Header = "Opened At" DisplayMemberBinding = "{Binding Createdat}" Width = "auto"/>
                            </GridView>
                        </ListView.View>

                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Approve" Command="{Binding ApproveSelectedTradeCommand}"/>
                                <MenuItem Header="Reject" Command="{Binding RejectSelectedTradeCommand}"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                </DockPanel>
            </DockPanel>

            <GridSplitter Grid.Row="1" Grid.Column="1" Height="5" HorizontalAlignment="Stretch"/>


            <DockPanel
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Grid.Row="2"
                >

                <TabControl
                    DockPanel.Dock="Top"
                    TabStripPlacement="Top"
                    Controls:TabControlHelper.IsUnderlined="True"
                    Controls:TabControlHelper.Underlined="TabPanel"
                    >
                    <TabItem Header="Chart">
                        <DockPanel
                            LastChildFill="True"
                        >
                            <Label 
                                Content="{Binding CandleStickHeading}" 
                                DockPanel.Dock="Top" 
                                Height="50"
                                TextBlock.FontWeight="Bold"
                                TextBlock.FontSize="16"
                                />

                            <lvc:CartesianChart Series="{Binding CandleStickCollection}">
                                <lvc:CartesianChart.AxisX>
                                    <lvc:Axis Labels="{Binding CandleStickXLabels}"/>
                                </lvc:CartesianChart.AxisX>
                            </lvc:CartesianChart>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Floating Status">

                        <ListView 
                                Margin = "10,10,0,0" 
                                VerticalAlignment = "Top" 
                                Width = "auto" 
                                SelectionMode="Single"
                                IsSynchronizedWithCurrentItem="True"
                                ItemsSource="{Binding FloatingStatusCollectionView}"
                                ScrollViewer.VerticalScrollBarVisibility="Visible"
                                ScrollViewer.CanContentScroll="False"
                            >
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                </Style>
                            </ListView.ItemContainerStyle>

                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header = "Commodity" DisplayMemberBinding = "{Binding Commodity}" Width = "auto"/>
                                    <GridViewColumn Header = "Buy Deals" DisplayMemberBinding = "{Binding BuyDeals}" Width = "auto"/>
                                    <GridViewColumn Header = "Buy Amt" DisplayMemberBinding = "{Binding BuyAmt}" Width = "auto"/>
                                    <GridViewColumn Header = "Buy Avg" DisplayMemberBinding = "{Binding BuyAvg}" Width = "auto"/>
                                    <GridViewColumn Header = "Bid" DisplayMemberBinding = "{Binding Bid}" Width = "auto"/>
                                    <GridViewColumn Header = "Sell Deals" DisplayMemberBinding = "{Binding SellDeals}" Width = "auto"/>
                                    <GridViewColumn Header = "Sell Amt" DisplayMemberBinding = "{Binding SellAmt}" Width = "auto"/>
                                    <GridViewColumn Header = "Sell Avg" DisplayMemberBinding = "{Binding SellAvg}" Width = "auto"/>
                                    <GridViewColumn Header = "Ask" DisplayMemberBinding = "{Binding Ask}" Width = "auto"/>
                                    <GridViewColumn Header = "Net Amt" DisplayMemberBinding = "{Binding NetAmt}" Width = "auto"/>
                                    <GridViewColumn Header = "P/L" DisplayMemberBinding = "{Binding Pl}" Width = "auto"/>
                                    <GridViewColumn Header = "Net P/L" DisplayMemberBinding = "{Binding Netpl}" Width = "auto"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                    </TabItem>
                    <TabItem Header="Active Sessions"/>
                    <TabItem Header="Open Positions">
                        <ListView 
                                Margin = "10,10,0,0" 
                                VerticalAlignment = "Top" 
                                Width = "auto" 
                                SelectionMode="Single"
                                IsSynchronizedWithCurrentItem="True"
                                ItemsSource="{Binding OpenTradesCollectionView}"
                                ScrollViewer.VerticalScrollBarVisibility="Visible"
                                ScrollViewer.CanContentScroll="False"
                            >
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                </Style>
                            </ListView.ItemContainerStyle>

                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header = "Symbol" DisplayMemberBinding = "{Binding Commodity}" Width = "100"/>
                                    <GridViewColumn Header = "B/S" DisplayMemberBinding = "{Binding OrderType}" Width = "auto"/>
                                    <GridViewColumn Header = "Amt" DisplayMemberBinding = "{Binding Amount}" Width = "50"/>
                                    <GridViewColumn Header = "P/L" DisplayMemberBinding = "{Binding CurrentPl}" Width = "50"/>
                                    <GridViewColumn Header = "Requested Open Price" DisplayMemberBinding = "{Binding OpenPrice}" Width = "auto"/>
                                    <GridViewColumn Header = "Requested Close Price" DisplayMemberBinding = "{Binding ClosePrice}" Width = "auto"/>
                                    <GridViewColumn Header = "State" DisplayMemberBinding = "{Binding OrderState}" Width = "auto"/>
                                    <GridViewColumn Header = "Client" DisplayMemberBinding = "{Binding ClientName}" Width = "auto"/>
                                    <GridViewColumn Header = "Opened At" DisplayMemberBinding = "{Binding Createdat}" Width = "auto"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>

                    <TabItem Header="Open Cover Positions">
                        <ListView 
                                Margin = "10,10,0,0" 
                                VerticalAlignment = "Top" 
                                Width = "auto" 
                                SelectionMode="Single"
                                IsSynchronizedWithCurrentItem="True"
                                ItemsSource="{Binding OpenCoverTradesCollectionView}"
                                ScrollViewer.VerticalScrollBarVisibility="Visible"
                                ScrollViewer.CanContentScroll="False"
                            >
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="BorderBrush" Value="LightGray" />
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                </Style>
                            </ListView.ItemContainerStyle>

                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header = "Id" DisplayMemberBinding = "{Binding Remoteid}" Width = "100"/>
                                    <GridViewColumn Header = "Commodity" DisplayMemberBinding = "{Binding Commodity}" Width = "auto"/>
                                    <GridViewColumn Header = "Type" DisplayMemberBinding = "{Binding OrderType}" Width = "50"/>
                                    <GridViewColumn Header = "Amount" DisplayMemberBinding = "{Binding Amount}" Width = "50"/>
                                    <GridViewColumn Header = "Open Price" DisplayMemberBinding = "{Binding OpenPrice}" Width = "auto"/>
                                    <GridViewColumn Header = "P/L" DisplayMemberBinding = "{Binding CurrentPL}" Width = "auto"/>
                                    <GridViewColumn Header = "Open Time" DisplayMemberBinding = "{Binding Opentime}" Width = "auto"/>
                                    <GridViewColumn Header = "Opened by" DisplayMemberBinding = "{Binding OpenedBy}" Width = "auto"/>
                                    <GridViewColumn Header = "Account" DisplayMemberBinding = "{Binding CoverAccountTitle}" Width = "auto"/>
                                </GridView>
                            </ListView.View>

                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="New Cover Position" Command="{Binding NewCoverPositionCommand}"/>
                                    <MenuItem Header="Edit Selected Cover Position" Command="{Binding EditSelectedCoverPositionCommand}"/>
                                    <MenuItem Header="Close Selected Cover Position" Command="{Binding CloseSelectedCoverPositionCommand}"/>
                                </ContextMenu>
                            </ListView.ContextMenu>
                        </ListView>
                    </TabItem>
                </TabControl>
            </DockPanel>
        </Grid>
    </DockPanel>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>

            <Controls:Flyout x:Name="LogsFlyout"
                            IsAutoCloseEnabled="False"
                            CloseButtonVisibility="Visible"
                            Header="Logs"
                            Position="Right"
                            IsOpen="{Binding LogsFlyoutOpen}"
            >
                <DockPanel
                        Margin="10"
                        SnapsToDevicePixels="True"
                        Width="250"
                        LastChildFill="True"
                    >
                    <ListBox 
                        Margin = "10" 
                        SelectionMode="Single"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding NotificationLogsListCollectionView}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ScrollViewer.CanContentScroll="False"
                    >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <TextBlock Text="{Binding}" 
                                               TextWrapping="Wrap"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </DockPanel>
            </Controls:Flyout>

            <Controls:Flyout x:Name="NotificationsFlyout"
                            AutoCloseInterval="1500"
                            IsAutoCloseEnabled="True"
                            CloseButtonVisibility="Visible"
                            Header="Notifications"
                            Position="Bottom"
                            IsOpen="{Binding NotificationsFlyoutOpen}"
            >
                
            </Controls:Flyout>

        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    
</Controls:MetroWindow>
